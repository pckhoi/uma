package {{.Package}}

import (
    "net/http"

    "github.com/pckhoi/uma"
)

var umaResourceTypes = map[string]uma.ResourceType{{`{`}}{{range $index, $element := .ResourceTypes}}
    {{printf "%q" $index}}: {
        Type: {{printf "%q" $index}},
        Description: {{$element.Description | printf "%q"}},
        IconUri: {{$element.IconUri | printf "%q"}},
        ResourceScopes: []string{{`{`}}{{range $element.ResourceScopes}}{{printf "%q," .}}{{end}}},
    },
{{end}}}

var resourceTemplates = ResourceTemplates{{`{`}}{{range $index, $element := .ResourceTypeAtPath}}
    uma.NewResourceTemplate({{printf "%q" $index}}, {{printf "%q" $element.Type}}, {{printf "%q" $element.NameTemplate}}),
{{end}}}

// UMAResourceMiddleware detects uma.Resource to be used in subsequent requests
func UMAResourceMiddleware(getBaseURL uma.BaseURLGetter) func(next http.Handler) http.Handler {
    return uma.UMAResouceMiddleware(getBaseURL, umaResourceTypes, resourceTemplates)
}
